#include <gtest/gtest.h>
#include <iostream>
#include <vector>

#include "../src/pvst/pvst.hpp"
#include "../src/core/core.hpp"
#include "../src/common/common.hpp"

// global config (test config)
core::config test_config;

TEST(PVSTTest, AdjacentFlubbles) {
  std::vector<graph_types::eq_n_id_t> v1 = {
    {0, 2},
    {1, 4},
    {2, 6},
    {0, 8},
    {3, 10},
    {4, 12},
    {0, 14},
    {5, 15},
    {6, 17},
    {0, 19},
  };

  std::vector<graph_types::eq_n_id_t> v2 = {
    {20, 128},
    {10, 129},
    {20, 132},
    {55, 134},
    {11, 135},
    {20, 138},
    {53, 140},
    {20, 142},
    {51, 144},
    {20, 146},
    {12, 147},
    {50, 150},
    {20, 152},
    {48, 154},
    {20, 156},
    {13, 157},
    {20, 160},
    {14, 161},
    {46, 164},
    {20, 166},
    {44, 168},
    {20, 170},
    {42, 172},
    {20, 174},
    {40, 176},
    {20, 178},
    {39, 180},
    {15, 181},
    {20, 184},
    {37, 186},
    {20, 188},
    {35, 190},
    {20, 192},
    {20, 194},
    {16, 195},
    {20, 198},
    {17, 199},
    {20, 202},
    {31, 204},
    {20, 206},
    {29, 208},
    {20, 210},
    {20, 212},
    {18, 213},
    {28, 216},
    {20, 218},
    {26, 220},
    {20, 222},
    {24, 224},
    {20, 226},
    {23, 228},
    {19, 229},
    {20, 232},
    {20, 234},
    {20, 236},
    {21, 238},
    {20, 240},
  };

  std::vector<graph_types::eq_n_id_t> v3 = {
    {20, 184},
    {37, 186},
    {20, 188},
    {35, 190},
    {20, 192},
    {20, 194},
    {16, 195},
    {20, 198},
    {17, 199},
    {20, 202},
    {31, 204},
    {20, 206},
    {29, 208},
    {20, 210},
    {20, 212},
    {18, 213},
    {28, 216},
    {20, 218},
    {26, 220},
    {20, 222},
    {24, 224},
    {20, 226},
    {23, 228},
    {19, 229},
    {20, 232},
    {20, 234},
    {20, 236},
    {21, 238},
    {20, 240},
  };

  std::vector<graph_types::eq_n_id_t> v4 = {
    {20, 184},
    {37, 186},
    {20, 188},
    {35, 190},
    {20, 192},
    {20, 194},
    {16, 195},
    {20, 198},
  };

  std::vector<graph_types::eq_n_id_t> v = {
    {20, 2},
    {20, 4},
    {20, 6},
    {0, 7},
    {100, 10},
    {20, 12},
    {98, 14},
    {20, 16}
  };

  tree::Tree t = pvst::compute_pvst(v, test_config);
  t.print_dot(true);
  EXPECT_EQ(1, 1);
}

TEST(PVSTTest, NestedFlubbles) {
  std::vector<graph_types::eq_n_id_t> v = {
    {11, 2},
    {30, 4},
    {0, 5},
    {11, 8},
    {29, 10},
    {1, 11},
    {11, 14},
    {28, 16},
    {2, 17},
    {11, 20},
    {27, 22},
    {3, 23},
    {11, 26},
    {26, 28},
    {4, 29},
    {11, 32},
    {19, 34},
    {22, 36},
    {21, 38},
    {19, 40},
    {20, 42},
    {5, 43},
    {19, 46},
    {11, 48},
    {18, 50},
    {6, 51},
    {11, 54},
    {16, 56},
    {15, 58},
    {7, 59},
    {11, 62},
    {14, 64},
    {8, 65},
    {11, 68},
    {13, 70},
    {9, 71},
    {11, 74},
    {12, 76},
    {10, 77},
    {11, 80},
  };

  std::vector<graph_types::eq_n_id_t> v1 = {
    {11, 26},
    {26, 28},
    {4, 29},
    {11, 32},
    {19, 34},
    {22, 36},
    {21, 38},
    {19, 40},
    {20, 42},
    {5, 43},
    {19, 46},
    {11, 48},
    {18, 50},
    {6, 51},
    {11, 54},
  };

  tree::Tree t = pvst::compute_pvst(v, test_config);
  t.print_dot(true);
  EXPECT_EQ(0, 1);
}

//
TEST(PVSTTest, Redunduncies) {
  std::vector<graph_types::eq_n_id_t> v = {
    {7,2},
    {8,4},
    {9,6},
    {9,8},
    {10,10},
    {0,11},
    {9,14},
    {8,16},
    {3,17},
    {3,19},
    {2,22},
    {4,23},
    {1,26},
    {3,27},
    {3,29},
    {7,32},
    {7,34},
  };

  //tree::Tree t = pvst::compute_pvst(v, test_config);
  //t.print_dot(true);
  //EXPECT_EQ(1, 1);
}
